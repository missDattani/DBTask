@model SchoolManagement_SIT326.Models.Models.StudentModel

@{
    ViewBag.Title = "AddStudent";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script defer src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<h2>AddStuent</h2>
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>StudentModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.StuId)
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-check-inline form-check">
                    @Html.RadioButton("Gender", "Male", false, new { id = "male", @class = "form-check-input" })
                    @Html.Label("Male", "Male", new { @for = "male", @class = "form-check-label " })
                    &nbsp; &nbsp;
                    @Html.RadioButton("Gender", "Female", false, new { id = "female", @class = "form-check-input" })
                    @Html.Label("Female", "Female", new { @for = "female", @class = "form-check-label " })
                    &nbsp; &nbsp;
                    @Html.RadioButton("Gender", "Other", false, new { id = "other", @class = "form-check-input" })
                    @Html.Label("Other", "Other", new { @for = "other", @class = "form-check-label " })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.subList != null)
                {
                    @Html.DropDownList("SubIdC", new SelectList(ViewBag.subList, "SubId", "SubjectName"), new { @class = "form-control", @multiple = "multiple", id = "SUBID1" })
                    @Html.HiddenFor(m => m.SubjectId, new { @class = "SVal" })
                    @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.coList != null)
                {
                    @Html.DropDownListFor(model => model.CountryId, new SelectList(ViewBag.coList, "CountryId", "CountryName"), "--Select Country--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.StateId, new SelectList(""), "--Select State--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CityId, new SelectList(""), "--Select City--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "GetStudents")
</div>

<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Content/Common/main.js"></script>
<script>
    if ($('#SUBID1').length > 0) {
        $('#SUBID1').val($('.SVal').val().split(","));
        $('#SUBID1').trigger("change");
    }

    $('#SUBID1').change(function () {
        $('.SVal').val(Array.from($('#SUBID1 option:selected')).map((m) => m.value).join(","));
    });

    $(document).ready(function () {
        $("#SUBID1").select2({
            placeholder: "Select Subjects",
            multiple: true
        });
    })
</script>
