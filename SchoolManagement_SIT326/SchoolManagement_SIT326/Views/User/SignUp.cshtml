@model SchoolManagement_SIT326.Models.UserModel

@{
    ViewBag.Title = "SignUp";
    Layout = null;
}
<link defer href="~/Content/Theme/css/Style.css" rel="stylesheet" />
<div class="wrapper">
    <div class="title-text">
        <div class="title signup">Signup Form</div>
    </div>
    @if (TempData["Error"] != null)
    {
        <h3 class="error">@TempData["Error"]</h3>
    }
    <div class="form-inner">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="field">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger error2" })

            </div><br />

            <div class="field">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger error2" })

            </div><br />

            <div class="field">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger error2" })

            </div><br />

            <div class="field">
                @Html.LabelFor(model => model.PassWord, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.PassWord, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PassWord, "", new { @class = "text-danger error2" })

            </div><br />

            <div class="field">
                @Html.LabelFor(model => model.ConfirmPassWord, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.ConfirmPassWord, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassWord, "", new { @class = "text-danger error2" })

            </div><br />



            <div class="field">
                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label" })

                @Html.DropDownListFor(model => model.Role, new List<SelectListItem>
                {
               new SelectListItem{Text="Super Admin", Value="1"},
               new SelectListItem{Text="Admin", Value="2"},
               new SelectListItem{Text="Student", Value="3"}

               }, "--Select Role--", new { @class = "form-control" })<br />
                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger error2" })

            </div><br />

            <div class="field btn">
                <div class="btn-layer"></div>
                <input type="submit" value="Signup">
            </div>
            <br />
            <div>
                Already a member? @Html.ActionLink("Login Here", "SignIn","User")
            </div>
        </div>
        }
    </div>
</div>
    
       
<script src="~/Content/Theme/js/Script.js"></script>