@model School_326.Models.Models.TeacherModel

@{
    ViewBag.Title = "UpdateTeacher";
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script defer src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<h2>UpdateTeacher</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TeacherModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TecId)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-check-inline form-check">
                    @Html.RadioButton("gender", "Male", false, new { id = "male", @class = "form-check-input" })
                    @Html.Label("Male", "Male", new { @for = "male", @class = "form-check-label " })
                    &nbsp; &nbsp;
                    @Html.RadioButton("gender", "Female", false, new { id = "female", @class = "form-check-input" })
                    @Html.Label("Female", "Female", new { @for = "female", @class = "form-check-label " })
                    &nbsp; &nbsp;
                    @Html.RadioButton("gender", "Other", false, new { id = "other", @class = "form-check-input" })
                    @Html.Label("Other", "Other", new { @for = "other", @class = "form-check-label " })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.SubList != null)
                {
                    @Html.DropDownList("SubIdC", new SelectList(ViewBag.SubList, "SubId", "SubjectName"), new { @class = "form-control", @multiple = "multiple", id = "SUBId1" })
                    @Html.HiddenFor(m => m.SubjectId, new { @class = "SVal" })
                    @Html.ValidationMessageFor(modal => modal.SubjectId, "", new { @class = "text-danger" })
                }
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.CoList != null)
                {
                    @Html.DropDownListFor(m => m.CoId, new SelectList(ViewBag.CoList, "CoId", "CountryName"), "--Select Country--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(modal => modal.CoId, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.StId, new SelectList(""), "--Select State--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CiId, new SelectList(""), "--Select City--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CiId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "GetTeachers")
</div>


<script src="~/Content/common/main.js"></script>
<script>
    if ($('#SUBId1').length > 0) {
        $('#SUBId1').val($('.SVal').val().split(","));
        $('#SUBId1').trigger("change");
    }

    $('#SUBId1').change(function () {
        $('.SVal').val(Array.from($('#SUBId1 option:selected')).map((m) => m.value).join(","));
    });

    $(document).ready(function () {
        $("#SUBId1").select2({
            placeholder: "Select Subjects",
            multiple: true
        });
    })
</script>
